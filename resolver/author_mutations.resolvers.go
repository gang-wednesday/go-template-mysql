package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"go-template/gqlmodels"
)

// CreateAuthor is the resolver for the createAuthor field.
func (r *mutationResolver) CreateAuthor(ctx context.Context, input gqlmodels.AuthorCreateInput) (*gqlmodels.Author, error) {

	// active := null.NewBool(false, false)
	// if input.Active != nil {
	// 	active = null.BoolFrom(*input.Active)
	// }
	// roleId, _ := strconv.Atoi(input.RoleID)
	// author := models.Author{
	// 	Username: null.StringFrom(*input.UserName),
	// }
	panic("")
}

// UpdateAuthor is the resolver for the updateAuthor field.
func (r *mutationResolver) UpdateAuthor(ctx context.Context, input *gqlmodels.AuthorUpdateInput) (*gqlmodels.Author, error) {
	panic(fmt.Errorf("not implemented: UpdateAuthor - updateAuthor"))
}

// DeleteAuthor is the resolver for the deleteAuthor field.
func (r *mutationResolver) DeleteAuthor(ctx context.Context, input gqlmodels.AuthorDeleteInput) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteAuthor - deleteAuthor"))
}
