package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"go-template/gqlmodels"
)

// MyPosts is the resolver for the myPosts field.
func (r *queryResolver) MyPosts(ctx context.Context) ([]*gqlmodels.Post, error) {
	panic(fmt.Errorf("not implemented: MyPosts - myPosts"))
}

// PostByID is the resolver for the postById field.
func (r *queryResolver) PostByID(ctx context.Context, id string) (*gqlmodels.Post, error) {
	panic(fmt.Errorf("not implemented: PostByID - postById"))
}

// PostByUser is the resolver for the postByUser field.
func (r *queryResolver) PostByUser(ctx context.Context, userID string) (*gqlmodels.PostPayload, error) {
	panic(fmt.Errorf("not implemented: PostByUser - postByUser"))
}

// PostSearch is the resolver for the postSearch field.
func (r *queryResolver) PostSearch(ctx context.Context, input *gqlmodels.PostFilterByTitle) (*gqlmodels.PostPayload, error) {
	panic(fmt.Errorf("not implemented: PostSearch - postSearch"))
}

// Posts is the resolver for the posts field.
func (r *queryResolver) Posts(ctx context.Context, input *gqlmodels.PostPagination) (*gqlmodels.PostPayload, error) {
	panic(fmt.Errorf("not implemented: Posts - posts"))
}
