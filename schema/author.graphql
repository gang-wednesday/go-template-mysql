type Author{
    id: ID!
    userName: String
    email: String
    name: String
    active: Boolean
    address: String
    lastLogin: String
    lastPasswordChange: String
    token: String
    role: Role
    createdAt: String
    updatedAt: String
    deletedAt: String
    posts: [Post!]

}

input AuthorPagination{
    limit: Int!
    page: Int!
}

input AuthorFilter {
    search: String
   
}




input AuthorCreateInput {
    userName: String
    email: String
    name: String
    password: String!
    address: String
    roleId: ID!
    active: Boolean
}

input AuthorUpdateInput {
    id: ID!
    userName: String
    email: String
    name: String
    address: String
}





input AuthorDeleteInput {
    id: ID!
}

type AuthorsPayload {
    authors: [Author!]!
    total: Int!   
}

type LoginResponse {
    token: String!
    refreshToken: String!
}

type ChangePasswordResponse {
    ok: Boolean!
}

type RefreshTokenResponse {
    token: String!
}